Исследование методов быстрого поиска изображений в задаче распознавания лиц

1. Тема

2. Актуальность
В последнее десятилетие визуальный поиск стал распространенной функцией многих поисковых систем. Объем сохраненных изображений в сети измеряется петабайтами. Поэтому эффективный поиск ближайших соседей стал серьезной исследовательской проблемой. Потребность быстрого поиска похожих изображений занимает большую нишу в современных приложениях компьютерного зрения, в том числе в задаче распознавания лиц. Социальные сети, правоохранительные органы имеют огромные коллекции изображений лиц, среди которых надо уметь быстро извлекать нужную информацию. Для решения данной проблемы требуются эффективные алгоритмы поиска с низкими временными затратами.

3. Постановка
Главной задачей данной работы является исследование современных индексных структур быстрого поиска и проверка их эффективности в задаче распознавания лиц. Будем считать, что выделением лица на изображении и построением его признаков занимаются алгоритмы сверточных нейронных сетей.

Проверка заключается в измерении среднего времени поиска похожих лиц в большой коллекции изображений. Время, затраченное на поиск k ближайших соседей будет основным критерием скорости алгоритма. Помимо скорости надо учитывать точность поиска. Во всех приведенных статьях точность измерялась как процент истинных ближайших соседей среди k найденных. В связи со спецификой нашей задачи, наиболее правильным вариантом измерения точности будет получение процента лиц, совпавших с лицом запроса, среди k ближайших соседей. Также в качестве альтернативного показателя качества будем измерять частоту вхождения каждого лица в k ближайших соседей. В случае совпадения лица запроса и лица с наибольшей частотой будем говорить об успешном распознавании. Во многих
задачах распознавания образов используется именно эта метрика.

Для применимости данного подхода к реальным задачам требуемая скорость поиска не  должна превышать нескольких миллисекунд. А точность должна быть в пределе допустимой для выбранного алгоритма.

4. Существующие методы
Начнем с того, что во всех упомянутых дальше алгоритмах решается одна и та же задача. А именно, вычисление евклидовых расстояний между векторами высокой размерности. Для сокращения времени поиска было предложено несколько методов многомерного индексирования, таких как популярное KD-дерево. Однако для больших размерностей оказывается, что такие подходы не намного эффективнее, чем исчерпывающий расчет расстояний.

Также одним из самых популярных алгоритмов ANN является евклидово локально-чувствительное хеширование (LSH). Однако наивный подход к реализации данного метода не учитывает требования к памяти структуры индексации. В LSH использование памяти может оказаться даже выше, чем у исходных векторов. Этот факт, а также факт наличия случайности серьезно ограничивают применимость данного алгоритма.

В связи с этим более подробно обсудим алгоритмы индексирования основанные на квантовании.

5. Инвертированный индекс
Общая идея в том, что инвертированый индекс содержит связные списки векторов, где каждый список является отображением некоторого вектора-центроида. На первом этапе запроса определяется центроид по короткому списку центроидов, затем происходит поиск по списку кандидатов, соответствующих этому центроиду. Стандартным методом обучения инвертированного индекса является алгоритм кластеризации k-средних.

6. Иерархический инвертированный индекс
Повысить эффективность этапа поиска и обучения можно с помощью инвертированного иерархического индекса (HKM), который, помимо первичного разбиения на ячейки Вороного, разбивает пространство каждой ячейки повторно.

7. Инвертированный мульти-индекс
И еще одна идея использования индексов для быстрого поиска предлагает разбивать пространство векторов на несколько подпространств меньшей размерности и обучать каждое подпространство малой размерности отдельно. Это позволяет разбивать датасет на огромное количество ячеек и с помощью декартова произведения центроидов быстро получать доступ к ним. Данная структура называется инвертированным мульти-индексом (IMI)

8. Пути улучшения
Недостатки этих алгоритмов в том, что существуют значительные зависимости между различными подпространствами дескрипторов. Для решения проблемы адаптации алгоритмов к коррелированным данным можно производить ортогональные преобразования над данными (c) или локальные оптимизации произведения квантизации (d).

9. Решение
Краткий обзор моего исследования

10. Ресурсы
В качестве данных для исследования я использовал набор данных для распознавания лиц VGGFace2. Потому что это один самых больших датасетов лиц и изображения в нем загружаются из поиска картинок Google и имеют различия в эмоции, позе, возрасте, освещенности и этнической принадлежности. Для построение дескрипторов лиц использовалась общедоступная сверточная нейронная сеть из библиотеки Python facerecognition. Она дала лучшие показатели точности распознавания для поиска по евклидову расстоянию. С ее помощью было построено более 150000 векторов признаков лиц, на которых проводились эксперименты.

11. Евклидово расстояние
Так как все исследуемые алгоритмы основаны на вычислении расстояний до векторов, то в качестве  алгоритма с эталонной точностью возьмем поиск по евклидову расстоянию.

12. Индексные структуры
Для проверки индексных алгоритмов поиска в задаче распознавания лиц были написаны следующие структуры: Простая индексная структура, Иерархическая индексная структура и Мульти-индексная структура.

13. Эксперименты (Евклидово расстояние)
Начнем с того, что рассмотрим график точности поиска по евкливову расстоянию. На графике можно видеть 2 ломанные обозначенные как Search и Recognition. Ломанная Search обозначает процент правильно найденных лиц среди k ближайших соседей. Ломанная Recognition обозначает процент правильно распознанных людей, где в качестве метрики использовалась наибольшая частота встречаемости лица среди соседей k ближайших соседей.
Можно заметить и в чем мы убедимся позже, что верхняя кривая находится в некоторой окрестности постоянного значения. Это означает, что с расширением объема поиска процент лиц соответствующих запросу держится на одном уровне. Search кривая явно убывает и связано это с тем, что при увеличении количества ближайших соседей вероятность попадания посторонних лиц в их число также увеличивается.

14. Эксперименты (Индексные структуры)
Индексные структуры дают похожую картину за исключением того, что точность  поиска несколько падает. Особенно сильно заметно падение на Мульти-индексной структуре, где точность падает до 64%. Наиболее высокую среднюю точность показала простая индексная структура.

15. Эксперименты (Общая точность)
Относительное ухудшение точности можно увидеть на следующем графике. Здесь зеленым цветом отмечена кривая поиска по точному евклидову расстоянию. Также на графике отчетливо видно западение качества поиска мульти-индексной структуры.

16. Эксперименты (Таблица)
Если говорить про время поиска, то из таблицы результатов очевидно превосходство индексных структур над точным поиском. Любая из исследуемых структура ускоряет поиск в сотни раз.

17. Эксперименты (Время)
Более наглядное представление скорости поиска можно увидеть на левом графике. На правом графике изображены ломанные соответствующие времени поиска только индексных структур. Основная тенденция ломанных идет на возрастание, что связанно с тем, что при увеличении количества ближайших соседей также увеличивается список кандидатов.

18. Практическая часть
Для написания кода в этой работе используются два языка программирования: Python и C++. Весь код, который участвует в экспериментах написан на C++, так как известно преимущество в скорости этого языка, по сравнению с Python. Фрагменты программы для обучения структур распараллеливались с помощью технологии OpenMP. Для обработки изображений была выбрана библиотека языка Python facerecognition. В связи с этим все скрипты подготовки набора данных были написаны на Python.

19. Выводы
В рамках данной работы были исследованы современные индексные структуры быстрого поиска информации в больших объемах данных, а также проверена эффективность этих структур в задаче распознавания лиц. Было выяснено, что при использовании любой из индексных структур скорость поиска возрастает в сотни раз по сравнению с исчерпывающим поиском. В целом, в больших коллекция изображений лиц индексные структуры могут показать приемлемую скорость поиска с хорошим показателем точности, что дает им право использоваться в реальных задачах распознавания.